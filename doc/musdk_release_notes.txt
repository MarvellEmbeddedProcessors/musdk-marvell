MUSDK Release Notes
===================
Marvell User-Space SDK (MUSDK) is a light-weight user-space I/O driver for Marvell's
Embedded Networking SoC's. The MUSDK library provides a simple and direct access to Marvell's
SoC blocks for networking applications and networking infrastructure.

.. Note::
	The MUSDK package is still in development and only partially tested.


Supported SoCs
---------------
	- Armada-80x0
	- Armada-70x0
	- Armada-37x0
	- Armada-808x
	- Armada-816x

Release Content
---------------
	- Binaries:
		- bin-armv8le-musdk-ga-<version>.zip - contains relevant binaries:
			- rootfs/usr/local/musdk/lib:
				- libmusdk.a
				- libmusdk.la
			- rootfs/usr/local/musdk/bin:
				- <all example applications>
	- Sources:
		- sources-musdk-<version>.x.zip 	- includes full sources of MUSDK package.


Supported Features
------------------
- PP2 features:
	- Tx/Rx interface
	- Buffer pool interface
	- Multiple buffer pools support
	- Checksum offload
	- MAC filter support
	- VLAN filter support
	- Promiscuous mode
	- MTU change support
	- Link state support
	- Parser information
	- RSS support (distribution to Rx queues)
	- Rx PAUSE support
	- Selective Tx queue enable/disable
	- Port and queue statistics
	- Port loopback support
	- QoS support
	- Ingress policer support
	- Egress scheduler support (strict priority / WRR)
	- Egress rate limiter support
	- Logical port (shared port for kernel and MUSDK)
	- Classification table to select Rx queue or drop the packet
	- Classification by DSA tag
	- Packet-echo example application
	- MAC & VLAN filters example application
	- Packet-gen example application
	- L3 forward example application
	- Classifier example application

- NETA features:
	- Tx/Rx interface
	- Checksum offload
	- MAC filter support
	- Promiscuous mode
	- MTU change support
	- Link state support
	- Parser information
	- Port statistics
	- Packet-echo example application

- SAM (Crypto) features:
	- Create session
	- Delete session
	- Cipher algorithms: NULL, AES, 3DES
	- Cipher key lengths: 128 bits, 192 bits, 256 bits
	- Cipher modes: CBC, ECB, GCM, CTR
	- Authentication algorithms: NULL, SHA1, SHA2(384/256/512), MD5
	- Authentication modes: HASH, HMAC, GMAC
	- Encryption modes:
		- Encryption only
		- Authentication only
		- Encryption and then authentication
	- Decryption modes:
		- Decryption only
		- Authentication only
		- Authentication and then decryption
	- Enqueue/dequeue mode: supports multiple requests
	- Single-buffer mode
	- Poll request completion
	- Interrupt mode support
	- MUSDK and kernel may operate on separate rings
	- IPSec protocol offload (IPv4) by the Crypto engine (Armada-70x0/80x0 only)
	- DTLS protocol offload (IPv4) by the Crypto engine (Armada-70x0/80x0 only)
	- Crypto-echo example application
	- Test applications

- DMAX2 (DMA engine) features
	- Pure-DMA data transfer (source-buffer to destination-buffer)
	- supported memory targets: Cacheable, Non-Cacheable/IO


Change Log
----------
18:06:
~~~~~~
- Added NETA features:
	- TX Scatter/Gather support
- Fixed in NETA driver:
	- bad rx descriptor processing
	- map port's registers only once
	- reset rx/tx dma before init
	- call to down / up only if interface is running
	- unregister neta ppio on deinit
	- fix: rx packet l4 type get
	- remove drop packets from rx queue on deinit
	- hw configuration on mru change
	- get l3 rx packet error
	- init flag logic
- Remove HW BM support in NETA driver
- Added support for SAM driver features:
	- GCM mode in protocol offload
	- SHA224 authentication
	- Multi buffer support for EIP97 and EIP197 engines
	- WA for DTLS check padding issue
	- 8 cores support in ``musdk_ppv2_crypto_echo`` application
	- Affinity support in ``musdk_affinity`` application
	- Crypto events in ``musdk_neta_crypto_echo``
	- Enable anti-replay protection for ``musdk_sam_ssltls``
	- Initial sequence id for encrypt and decrypt ``musdk_sam_ssltls`` and ``musdk_sam_ipsec``

- API updates:
	- NETA:
		- Added ``neta_ppio_send_sg`` function
		- Added ``neta_ppio_inq_get_all_buffs`` to get all free buffers from InQ


18:02:
~~~~~~
- Added GIU, MQA and NMP support
- Added support for PPv2 guest mode
- Added support for memory region selection in pp2_hif and pp2_ppio
- Added support for NETA features:
 	- Checksum offload
	- MAC filter support
	- Promiscuous mode
	- MTU change support
	- Link state support
	- Parser information
	- Port statistics
- API updates:
	- General:
		- Renamed ``MV_NET_IP4_F_TOS`` to ``MV_NET_IP4_F_DSCP``
	- PP2:
		- Added ``pp2_get_kernel_hif_map`` function
		- Added ``skip_hw_init`` parameter to ``pp2_init_params`` (for guest mode)
		- Added ``pp2_bpool_probe`` and its counterpart ``pp2_bpool_remove``
		- Added ``pp2_bpool_serialize``
		- Added ``pp2_bpool_get_capabilities``
		- Added ``mem`` parameter to ``pp2_hif_params``
		- Added ``mem`` parameter to ``pp2_ppio_inq_params``
		- Added ``pp2_ppio_get_capabilities``
		- Added ``pp2_ppio_set_outq_state`` and ``pp2_ppio_get_outq_state``
		- Added ``pp2_ppio_set_rx_pause`` and ``pp2_ppio_get_rx_pause``
		- Added ``pp2_ppio_serialize``
		- Added ``pp2_ppio_probe`` and its counterpart ``pp2_ppio_remove``
	- SAM:
		- Added ``sam_get_num_cios`` and ``sam_get_available_cios``
		- Added ``sam_cio_enq_ssltls`` for DTLS protocol offload
		- Added ``sam_session_ssltls_params`` in ``sam_session_params``
	- NETA:
		- In ``neta_ppio_inqs_params``, changed ``buf_size`` parameter to ``mtu``
