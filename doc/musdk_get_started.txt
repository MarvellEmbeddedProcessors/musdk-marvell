.. _MUSDK-Installation:

Getting Started with MUSDK
===========================

Build Linux Kernel
------------------
Linux kernel supported is 4.14.76

(1) Apply (use 'git am -3') all patches
	in: "<musdk-dir>/patches/linux-4.14" for Linux kernel 4.14.76

(2) Build Linux kernel image::

	> make mrproper
	> make marvell_v8_sdk_defconfig
	> make

.. _kernel-modules:

Build Required Kernel Modules
-----------------------------
(1) Set environment variables:

	- Cross compiler for compilation of modules, must be same as compiler that was used for Kernel. for example::

		> export CROSS_COMPILE=~/SDK/marvell-tools-202/bin/aarch64-marvell-linux-gnu-

	- Kernel directory. for example::

		> export KDIR=~/linux-4.14.76-devel

(3) Build the MUSDK UIO kernel module and install it::

	> cd <musdk-dir>/modules/cma
	> make

(4) Build the SAM UIO kernel module and install it.
    This step is optional and required only when SAM driver is used::

	> cd <musdk-dir>/modules/sam
	> make

(5) Build the DMA UIO kernel module and install it.
    This step is optional and required only when DMA driver is used::

	> cd <musdk-dir>/modules/dmax2
	> make

Prepare EIP197 Firmware images
-------------------------------
This step is optional and required only when using SAM driver on EIP197 crypto device.

Get EIP197 Firmware from release binaries and copy them to target file system
under directories:
"/lib/firmware/inside-secure/eip197b/" - EIP197b (A7K/A8K)

Binary files: ipue.bin, ifpp.bin


Configure and Build MUSDK
-------------------------
Set external variables:

   - Cross compiler for compilation of user space libraries and applications. For example::

	> export CROSS_COMPILE=~/SDK/marvell-tools-202/bin/aarch64-marvell-linux-gnu-

Build the MUSDK package
~~~~~~~~~~~~~~~~~~~~~~~

(1) Run bootstrap for initial configuration

	> cd <musdk-dir>
	> ./bootstrap

(2) Configure MUSDK

	.. note::
		For shared libraries compilation of MUSDK must be configured with ``--host=aarch64-linux-gnu``.

	* configure option #1 - build all available drivers and related applications::

		> ./configure

	* configure option #2 - disable some drivers; e.g. remove SAM driver and SAM test application::

		> ./configure --enable-sam=no

(3) Build MUSDK
		> make -j8

(4) Install MUSDK
		> make install

  .. note::
	Default install directory is: <musdk-dir>/usr/local.
	Install directory can be changed using: ``make install DESTDIR=<install-dir>``

Insert Kernel Modules
---------------------
(1) Copy the kernel modules to the target board file-system:
	- <musdk-dir>/modules/cma/musdk_cma.ko      (mandatory)
	- <musdk-dir>/modules/sam/mv_sam_uio.ko     (optional)
	- <musdk-dir>/modules/dmax/mv_dmax2_uio.ko  (optional)
	- ${KDIR}/drivers/uio/uio_pdrv_genirq.ko    (mandatory)
	- ${KDIR}/drivers/crypto/inside-secure/crypto_safexcel.ko    (optional)

(2) Copy the MUSDK local install folder (as defined by AC_PREFIX_DEFAULT) to the target board file-system.

(3) Insert MUSDK kernel space modules::

	> insmod musdk_cma.ko     (mandatory)

	> insmod uio_pdrv_genirq.ko of_id="generic-uio"     (mandatory)

    For A7040/8040/CN913x::

	> insmod mv_dmax2_uio.ko  (optional)

To run MUSDK SAM test applications kernel modules below must be loaded first:

(4) Load kernel module for global EIP197 initializations::

	> insmod crypto_safexcel.ko rings=0,0

    .. note::

	It is mandatory to load this module before mv_sam_uio.ko module.

(5) Load kernel module for SAM UIO support::

	> insmod mv_sam_uio.ko

    .. note::

	rings=x,y means how many EIP197/EIP97 rings allocated for kernel usage:
		- x - for cp0 device
		- y - for cp1 device (if exist)


Run MUSDK Application Examples
------------------------------
Please see instructions in "Running MUSDK Examples" section.

In addition, some module-specific test applications are described in the corresponding user guide section.
