Security Acceleration Module (SAM) User Guide
=============================================

Introduction
------------
MUSDK SAM driver and SAM test applications are part of the whole MUSDK package.

MUSDK SAM driver provides capability of usage Security Accelerator HW (EIP197)
directly from user-space applications with minimum overhead and high performance.

Features Set
------------

SAM initialization
~~~~~~~~~~~~~~~~~~
Function name: ``sam_cio_init``

- Returns handle to Crypto IO instance (struct sam_cio)
- Valid range for the following fields in "struct sam_cio_params" is defined by
  EIP197 DDK compilation:

  - match		- DTS string format is "cio-0:0", where
				first number is engine ID and second number is ring ID.
				Only single engine is supported, so first number must be 0.
				Second number (ring ID) must be less than SAM_HW_RING_NUM.
  - size		- ring size in number of descriptors must be less or equal than SAM_HW_RING_SIZE
  - num_sessions	- number of supported sessions must be less or equal than SAM_HW_SA_NUM
  - max_buf_size	- maximum buffer size [in bytes] must be less or equal than SAM_SA_DMABUF_SIZE

SAM create session
~~~~~~~~~~~~~~~~~~
Function name: ``sam_session_create``

- Only synchronous mode of session create is supported
- Cipher algorithms: NULL, AES, 3DES
- Cipher key length: 128, 192, 256 bits
- Cipher modes: CBC, ECB
- Authentication algorithms: NULL, SHA1, MD5, SHA2 (384/256/512)
- Authentication modes: HASH, HMAC
- Encryption: encryption only, authentication only, encryption and then authentication
- Decryption: decryption only, authentication only, authentication and then decryption

SAM delete session
~~~~~~~~~~~~~~~~~~
Function name: ``sam_session_destroy``

SAM enqueue operation
~~~~~~~~~~~~~~~~~~~~~
Function name: ``sam_cio_enq``

- Only asynchronous mode is supported.
- Multiple buffers mode is not supported. (requests->num_bufs must be 1)
- Valid source and valid destination buffers must be provided by caller.
  Source and Destination buffer can be the same one.
- Cipher IV in the buffer is not supported (field "cipher_iv_offset" is ignored)
- AAD is not supported, so fields "auth_aad_offset" and "and auth_aad" are ignored
- "auth_icv_offset" must be equal to ("auth_offset" + "auth_len")

SAM dequeue operation
~~~~~~~~~~~~~~~~~~~~~
Function name: ``sam_cio_deq``

- Only polling mode is supported.

SAM shutdown
~~~~~~~~~~~~
Function name: ``sam_cio_deinit``

SAM enable/disable
~~~~~~~~~~~~~~~~~~
Currently, these functions are not supported.

Function name: ``sam_cio_enable``, ``sam_cio_disable``

Debug capabilities
~~~~~~~~~~~~~~~~~~
To enable debug information during create session use::

	#define SAM_SA_DEBUG

To enable debug information during enqueue/dequeue operation use::

	#define SAM_CIO_DEBUG


Source tree
-----------
Sources::

	musdk/
		- src/include/driver/	- public include files for SAM driver
			- mv_sam.h
			- mv_sam_cio.h
			- mv_sam_session.h

		- src/include/lib/
			- mv_md5.h
			- mv_sha1.h
			- mv_sha2.h
			- mv_aes.h

		- src/driver/sam/	- SAM driver implementation
			- sam.h
			- sam.c
			- sam_debug.c

		- src/lib/crypto/
			- mv_md5.c
			- mv_sha1.c
			- mv_sha2.c
			- mv_aes.c

		- apps/tests/sam_kat_single/	- Simple AES128-CBC test for predefined values
			- kat_tests_single.c

		- apps/tests/sam_kat_suite/	- SAM KAT test suite using input text files to run multiple tests
			- kat_tests.c
			- other *.c and *.h files
			- aes_testc.txt, 3des_tests.txt, hmac_tests.txt - input data files examples.

Binaries:
	- libmusdk.a		- MUSDK APIs implementation library
	- musdk_sam_single	- simple test application
	- musdk_sam_kat		- test suite using input text files for session and operation data


SAM Test Applications
---------------------
To run MUSDK SAM test applications eip197 driver kernel module must be loaded before.
For more details please refer to "EIP197 Framework Usage" section in "EIP197 Release Notes".

Test application: "musdk_sam_single"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This application run single AES128-CBC encryption and decryption on predefined inputs
and check validity of the output.
For encryption CIO instance cio-0:0 is used.
For decryption CIO instance cio-0:1 is used.

Predefined test inputs are shown below::

	/*
	 * Case #1: Encrypting 16 bytes (1 block) using AES-CBC with 128-bit key
	 * Key       : 0x06a9214036b8a15b512e03d534120006
	 * IV        : 0x3dafba429d9eb430b422da802c9fac41
	 * Plaintext : "Single block msg"
	 * Ciphertext: 0xe353779c1079aeb82708942dbe77181a
	 */

Application usage::

	> ./musdk_sam_single

Test application: "musdk_sam_kat"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This test application reads test data from the input file, runs the tests one by one and
optionally checks the output validity.

See format of the input files in the examples under directory: "apps/tests/sam_kat_suite/"
- aes_tests.txt  	- AES encryption and decryption tests
- 3des_tests.txt 	- 3DES encryption and decryption tests
- hmac_tests.txt 	- HMAC MDD5/SHA1/SHA2 authentication tests
- aes_chain_test.txt	- encryption + authentication and auhentication + decryption tests

Application usage::

	> ./musdk_sam_kat <match> <test_file> [OPTIONS]

where:
	<match> string format is "cio-0:x"

	[OPTIONS] are optional:

		-c <number>      Number of requests to check (default: 10)
		-p <number>      Number of requests to print (default: 1)
		-e <number>      Maximum burst for enqueue (default: 32)
		-d <number>      Maximum burst for dequeue (default: 32)
		--same_bufs      Use the same buffer as src and dst (default: "no")

To run performance tests using "musdk_sam_kat" application:
	- set "Testcounter" field in the <test_file> to large number (e.g. 10000), and
	- run "musdk_sam_kat" application with "-c 0" option
